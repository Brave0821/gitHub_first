vs code에서 파일을 생성시에는 파일 명 뒤에는 확장자 포함해서 작성하기 
ex index.html  
alt + z - > 줄바꿈 

html 웹 페이지에서 다른 페이지로 이동할 수 있도록 웹 브라우저에게 명령을 
내리는 구조적인 문서를 만드는언어

<tag> - > 의미있는 정보를 가진 메타데이터로 부여된 키워드 또는 분류이다.
ex div 

웹접근성 연구소

 대제목 태그 
 부제목 태그 
 중제목 태그 
 내용 태그 
 내용 강조 태그 
 이미지 태그 
 하이퍼 링크 태그 

 <구조태그>
 
<!DOCTYPE html>
<meta>
<title></title> 
<head></head>
<body></body>
열리면 닫는다.

태그 속성 = 값 
속성 : 태그마다 속성을 부여해야 할 경우 
미리 정의된 속성 
color, font 등등 

값 : 속성이 가지는 값 
큰따옴표 작은따옴표 
속성이 가진 고유 값 
개발자가 기본 규칙 내에서 지정할 수 있는 사용자지정 값 설정

<html long = "en" or "ko">  
페이지 언어 설정 컴퓨터의 화면 낭독 소프트웨어 "스크린리더"

<meta charset = "UFT-8">
유니코드 문자열 선언 

<meta name= "discription" content="">

스타벅스 코리아 밑에 ~~~~~~ 
content="" - > 여기에 밑에 내용 

<meta name= "keywords" content="">
인스타그램에 해시태그같은 느낌 

<!--주석-->
필요한 부분에 주석달기 
적용은 안됨 
설명 

버그 디버깅 에러 

<git을 위한 리눅스 명령어> 
    
   1. ctrl + j 터미널 단축키 - > git 입력
    
   2. 명령어 ctrl + c 터미널 새로고침  

    2. ~ 현재 가장 최상위 디렉터리 위치  

    pwd 현재 경로 디렉터리(폴더) 표시

   3. ls - > 현재 디렉터리 안에 폴더와 파일 알려준다.

    -----------------------------------------------------

   4. mkdir git_directory  현재 경로 위치에  디렉터리 생성 

    ex mkdir 생성하고 싶은 폴더 

    5. rm -r git_directory 폴더 지우기 

    6. new 생성 

    cd new - > new 폴더로 들어간다.
    cd 디렉터리 명 
        하위 디렉터리로 이동 

    7. cd.. - > 위에 있는 경로는 못 읽기에 나가기.  .. 1단계 위로 나가기.
    
    한단계 위..라는 뜻으로 ..을 사용해서 나간다.

    8. vim - > 파일 생성 
    vim test.txt - > ls 파일 확인 - > cat test.txt - > 메모 확인 
    원하는 파일을 확장자 포함해서 ex)test.txt 생성 후 i 눌러서 끼워넣기 버전으로 변경하고 
    원하는 내용 입력 후 esc 키 누르고 shift + ;wq 저장하고 종료 

    9.cat test.txt - > 메모 확인   


    **tip 
    터미널 입력 중 입력이 안되거나 입력화면이 보이지 않으면 
    ctrl + c 또는 q 를 누르면 정상으로 돌아온다.

    git config --list - > 등록한 계정 확인 

---------------------------------------------------------------

<git은 어떻게 파일 관리를 하는 걸까?>

작업트리 or 작업 디렉터리 작업저장폴더 

스테이지 or 스테이징영역 

비전으로 만든 파일이 대기하는 장소 
작업트리에서 10개의 파일 수정 후 4개의 파일을 버전으로 만든다면 4개의 파일만 스테이지에서 저장소로 저장될때까지 대기하게 됩니다. 

저장소 or 리포지토리

스테이지에 있던 파일을 버전으로 만들어 저장하는 장소 


-----------------------------------------------------------------

작업트리 - > 스테이지 - > 저장소 

작업트리(hello.txt) - > 

내 작업물 - > 1. git add(명령어) 대기소 (올린거 맞아?) - > 틀리면 2. git reset 
- > 

git add - > 3. git commit(저장) - >   
repository(로컬저장소) - > 4. git push(웹 저장소에 파일 업로드한다.) 

repository(git서버)  

5. git pull(다시 받아서 업데이트 후 ) - > git push(저장하고 업로드) 

pull은 받아서 수정하고 push 저장

add - > commit - >  pull - > push 


작업 메시지 (commit) 기준으로 돌아갈 수 있다.

---------------------------------------------------------------------
https://github.com/Brave0821/gitHub_first.git

-m 메세지의 약자.
깃에 메인은 원래는 마스터였다.

1. git init 부터해서 마스터
2. ls -a 숨긴 파일도 전부 보이기  git 보임.
3. git branch -M main으로 변경 
4. 
  